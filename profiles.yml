dbt_spark_multicatalog_example:
  target: 1-iceberg-iceberg-ok
  outputs:
    1-iceberg-iceberg-ok:
      type: spark
      method: session
      host: localhost
      schema: "default"
      threads: 1
      server_side_parameters:
        "spark.jars.packages": "org.apache.iceberg:iceberg-spark-runtime-3.4_2.12:1.7.1,org.apache.hadoop:hadoop-aws:3.3.2"
        "spark.fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
        "spark.sql.extensions": "org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions"
        "spark.hadoop.fs.s3a.connection.ssl.enabled": "false"
        "spark.hadoop.fs.s3a.path.style.access": "true"
        "spark.sql.catalogImplementation": "hive"

        # Конфигурация для первого каталога (Hive Metastore 1, MinIO 1)
        "spark.sql.catalog.metastore_1": "org.apache.iceberg.spark.SparkCatalog"
        "spark.sql.catalog.metastore_1.uri": "thrift://hive-metastore-1:9083"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-1.endpoint": "minio-1:9000"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-1.access.key": "minioadmin"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-1.secret.key": "minioadmin"

        # Конфигурация для второго каталога (Hive Metastore 2, MinIO 2)
        "spark.sql.catalog.metastore_2": "org.apache.iceberg.spark.SparkCatalog"
        "spark.sql.catalog.metastore_2.uri": "thrift://hive-metastore-2:9083"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-2.endpoint": "minio-2:9000"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-2.access.key": "minioadmin"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-2.secret.key": "minioadmin"

    2-iceberg-hudi-fail:
      type: spark
      method: session
      host: localhost
      schema: "default"
      threads: 1
      server_side_parameters:
        "spark.jars.packages": "org.apache.hudi:hudi-spark3.4-bundle_2.12:0.15.0,org.apache.iceberg:iceberg-spark-runtime-3.4_2.12:1.7.1,org.apache.hadoop:hadoop-aws:3.3.2"
        "spark.fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
        "spark.sql.extensions": "org.apache.spark.sql.hudi.HoodieSparkSessionExtension,org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions"
        "spark.hadoop.fs.s3a.connection.ssl.enabled": "false"
        "spark.hadoop.fs.s3a.path.style.access": "true"
        "spark.sql.catalogImplementation": "hive"
        "spark.serializer": "org.apache.spark.serializer.KryoSerializer"
        "spark.kryo.registrator": "org.apache.spark.HoodieSparkKryoRegistrar"

        # Конфигурация для первого каталога (Hive Metastore 1, MinIO 1)
        "spark.sql.catalog.metastore_1": "org.apache.iceberg.spark.SparkCatalog"
        "spark.sql.catalog.metastore_1.uri": "thrift://hive-metastore-1:9083"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-1.endpoint": "minio-1:9000"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-1.access.key": "minioadmin"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-1.secret.key": "minioadmin"

        # Конфигурация для второго каталога (Hive Metastore 2, MinIO 2)
        "spark.sql.catalog.metastore_2": "org.apache.spark.sql.hudi.catalog.HoodieCatalog"
        "spark.sql.catalog.metastore_2.uri": "thrift://hive-metastore-2:9083"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-2.endpoint": "minio-2:9000"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-2.access.key": "minioadmin"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-2.secret.key": "minioadmin"

    3-iceberg-hudi-ok:
      type: spark
      method: session
      host: localhost
      schema: "default"
      threads: 1
      server_side_parameters:
        "spark.jars.packages": "org.apache.hudi:hudi-spark3.4-bundle_2.12:0.15.0,org.apache.iceberg:iceberg-spark-runtime-3.4_2.12:1.7.1,org.apache.hadoop:hadoop-aws:3.3.2"
        "spark.fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
        "spark.sql.extensions": "org.apache.spark.sql.hudi.HoodieSparkSessionExtension,org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions"
        "spark.hadoop.fs.s3a.connection.ssl.enabled": "false"
        "spark.hadoop.fs.s3a.path.style.access": "true"
        "spark.sql.catalogImplementation": "hive"
        "spark.serializer": "org.apache.spark.serializer.KryoSerializer"
        "spark.kryo.registrator": "org.apache.spark.HoodieSparkKryoRegistrar"

        # Конфигурация для первого каталога (Hive Metastore 1, MinIO 1)
        "spark.sql.catalog.metastore_1": "org.apache.iceberg.spark.SparkCatalog"
        "spark.sql.catalog.metastore_1.uri": "thrift://hive-metastore-1:9083"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-1.endpoint": "minio-1:9000"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-1.access.key": "minioadmin"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-1.secret.key": "minioadmin"

        # Конфигурация для второго каталога (Hive Metastore 2, MinIO 2)
        "spark.sql.catalog.spark_catalog" : "org.apache.spark.sql.hudi.catalog.HoodieCatalog"
        #"spark.sql.catalog.spark_catalog.type" : "hive"
        "spark.hive.metastore.uris": "thrift://hive-metastore-2:9083"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-2.endpoint": "minio-2:9000"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-2.access.key": "minioadmin"
        "spark.hadoop.fs.s3a.bucket.metastore-bucket-2.secret.key": "minioadmin"

